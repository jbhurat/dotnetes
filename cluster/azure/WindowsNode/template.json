{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": null,
            "type": "securestring"
        },
        "adminPassword": {
            "defaultValue": null,
            "type": "securestring"
        },
        "machineName": {
            "defaultValue": "KubeWin00",
            "type": "string"
        },
        "ethernet1Name": {
            "defaultValue": "Ethernet1",
            "type": "string"
        },
        "privateIpAddress": {
            "defaultValue": "10.0.1.10",
            "type": "string"
        },
        "privateIpAddressTransparent": {
            "defaultValue": "10.0.1.11",
            "type": "string"
        },
        "ethernet2Name": {
            "defaultValue": "Ethernet2",
            "type": "string"
        },
        "routesName": {
            "defaultValue": "UDR-Win01",
            "type": "string"
        },
        "routeName": {
            "defaultValue": "RouteToWin00",
            "type": "string"
        },
        "addressPrefix": {
            "defaultValue": "192.168.1.0/24",
            "type": "string"
        },
        "virtualNetworkName": {
            "defaultValue": "AzureKubeNet",
            "type": "string"
        },
        "virtualNetworkPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "string"
        },
        "storageAccountName": {
            "defaultValue": "azurekubestore",
            "type": "string"
        }
    },
    "variables": {
        "apiVersion": "2015-06-15"
    },
    "resources": [
        {
            "comments": "Windows Box with containers enabled",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('machineName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter-with-Containers",
                        "version": "2016.0.20161025"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('machineName'),'OSDisk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', concat('/vhds/', parameters('machineName'),'OSDisk.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('machineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('ethernet1Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('ethernet2Name'))]"
                        }
                    ]
                }
            },
            /* //TODO Configure WinRM or Possibly Install Docker"resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/WinRMCustomScriptExtension')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.4",
                        "settings": {
                            "fileUris": [
                                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-winrm-windows/ConfigureWinRM.ps1",
                                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-winrm-windows/makecert.exe",
                                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-winrm-windows/winrmconf.cmd"
                            ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ConfigureWinRM.ps1 ',variables('hostDNSNameScriptArgument'))]"
                        }
                    }
                }
            ],*/
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('ethernet1Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('ethernet2Name'))]"
            ]
        },
        {
            "comments": "Routable Interface with Public and Private Addresses",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('ethernet1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[parameters('privateIpAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ethernet1Name'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/default')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": true
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ethernet1Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "comments": "Public IP for the adapter",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('ethernet1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Private NIC Overridden By the Docker Private Network",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('ethernet2Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[parameters('privateIpAddressTransparent')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/default')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": true
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "comments": "Internal routes",
            "type": "Microsoft.Network/routeTables",
            "name": "[parameters('routesName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "routes": [
                    {
                        "name": "[parameters('routeName')]",
                        "properties": {
                            "addressPrefix": "[parameters('addressPrefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('privateIpAddress')]"
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Virtual Network",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkPrefix')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "[parameters('virtualNetworkPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routesName'))]"
                            }
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routesName'))]"
            ]
        },
        {
            "comments": "Storage Account",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {},
            "resources": [],
            "dependsOn": []
        }
    ]
}